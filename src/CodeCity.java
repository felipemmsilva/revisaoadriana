
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class CodeCity {
    public static void main(String[] args) {

        int vidajogador = 10;
            if (vidajogador == 0) {
                System.out.println("Voc√™ morreu");

                int vidabugadormaligno = 24;
                if (vidabugadormaligno == 0);

            }
        // introdu√ß√£o
        System.out.println("Ol√°, jogador! Seja bem-vindo ao universo digital de Code City, um mundo constru√≠do com linhas de c√≥digo, l√≥gica e orienta√ß√£o a objetos. Voc√™ acaba de ser instanciado ‚Äî seu nome √© Inst√¢ncia, um objeto rec√©m-criado no cora√ß√£o pulsante da programa√ß√£o Java. ");
        System.out.println("Mas este n√£o √© um nascimento comum... ");
        System.out.println("Seu criador, o lend√°rio C√≥digo Mestre, foi capturado por uma entidade corrompida: o tem√≠vel Bugador Mal√≠gno. Esta falha destrutiva amea√ßa descompilar Code City, byte por byte, deixando um rastro de erros fatais e m√©todos quebrados. ");
        System.out.println("Voc√™ tem 10 vidas, cada erro durante o percurso far√° com que voc√™ perca uma das vidas, por isso, pense bem antes de codar!");
        System.out.println("O bugador mal√≠gno tem 24 vidas, e para derrotar ele precisa acabar com todas elas. A cada c√≥digo correto voc√™ tira uma vida dele.");

        // tutorial inicial
        System.out.println("Antes de come√ßar preciso de passar algumas informa√ß√µes:");
        System.out.println("Tudo que eu te ensinar est√° no Livro: Java: como programar, de Paul Deitel, dispon√≠vel em https://plataforma.bvirtual.com.br/ ");
        System.out.println("Para jogar o jogo voc√™ s√≥ precisar√° de seu teclado e mouse, para escrever suas respostas");
        System.out.println("Primeiramente vou te explicar o que s√£o vari√°veis:  uma vari√°vel √© como um espa√ßo na mem√≥ria do computador onde podemos guardar um valor para us√°-lo depois. Cada vari√°vel tem um nome (que voc√™ escolhe) e um tipo (que define que tipo de dado ela pode armazenar).\n" +
                "\n" +
                "Antes de usar uma vari√°vel, √© preciso declarar qual ser√° o tipo de dado e o nome da vari√°vel. Voc√™ tamb√©m pode j√° atribuir um valor a ela no momento da declara√ß√£o. Um exemplo √©: int idade = 10. int √© a vari√°vel que recebe numeros inteiros, idade √© o nome da vari√°vel, = significa que a vari√°vel idade est√° recebendo o valor que vem logo em seguida e 10 √© o valor da vari√°vel idade");
        System.out.println("Os tipos primitivos s√£o os tipos de dados mais b√°sicos da linguagem Java. Eles servem para representar valores simples. Cada tipo primitivo ocupa um certo espa√ßo na mem√≥ria e tem uma fun√ß√£o espec√≠fica.");
        System.out.println("int recebe n√∫meros inteiros, double recebe n√∫meros quebrados, char recebe um √∫nico caracter, string recebe texto, boolean recebe verdadeiro ou falso");
        System.out.println("Comando de sa√≠da: System.out.println(). Esse comando escreve uma mensagem no console (a tela do programa) e pula para a pr√≥xima linha. Tamb√©m existe o System.out.print(), que escreve algo sem pular a linha depois. Por √∫ltimo temos o System.out.printf() que mostra mensagens formatadas");
        System.out.println("Comando de entrada: Para receber dados do usu√°rio (por exemplo, ler algo digitado no teclado), usamos a classe Scanner. Com ela, podemos ler diferentes tipos de dados, como n√∫meros inteiros, textos ou n√∫meros decimais. Antes de usar o Scanner, √© necess√°rio importar a classe com o seguinte comando: import java.util.Scanner; Depois, criamos um objeto do tipo Scanner e usamos m√©todos para ler os dados: Scanner teclado = new Scanner(System.in); e na linha de baixo usamos a seguinte frase na hora de declarar o que uma var√≠avel recebe: Scanner teclado = new Scanner(System.in); ");

        //cap√≠tulo 2
        System.out.println("Pronto, agora voc√™ chegou no cap√≠tulo 1");
        System.out.println("Neste cap√≠tulo voc√™ ir√° aprender sobre estruturas de decis√£o: if e switch");
        System.out.println("O comando if em Java serve para tomar decis√µes. Ele permite que o programa execute um bloco de c√≥digo somente se uma condi√ß√£o for verdadeira. ");
        System.out.println("if (condi√ß√£o) { ");
        System.out.println("vou passar um exemplo simples de if:");
        System.out.println("int idade = 18; \n" +
                "\n" +
                "  \n" +
                "\n" +
                "if (idade >= 18) { \n" +
                "\n" +
                "    System.out.println(\"Voc√™ √© maior de idade.\"); \n" +
                "\n" +
                "} ");
        System.out.println("A vari√°vel significa a idade, ela recebeu 18, o if est√° sendo utilizado para verificar se √© maior de idade ou n√£o. Se a idade for maior ou igual 18, o sistema fala que o usu√°rio √© maior de idade");
        System.out.println("Else √© um comando caso o valor n√£o passe pelo if, o que o sistema deve fazer, segue um exemplo:");
        System.out.println("if (idade >= 18) {\n" +
                "    System.out.println(\"Voc√™ √© maior de idade.\");\n" +
                "} else {\n" +
                "    System.out.println(\"Voc√™ √© menor de idade.\");\n" +
                "}");
        System.out.println("O sistema faz a mesma verifica√ß√£o, entretanto se a idade for menor, com este comando o sistema emitir√° para o usu√°rio a mensagem de que o usu√°rio √© menor de idade");
        System.out.println("O comando while √© um comando usado para repetir um bloco de c√≥digo enquanto uma condi√ß√£o for verdadeira. Ele √© muito √∫til quando voc√™ n√£o sabe quantas vezes algo precisa se repetir.");
        System.out.println("while (condi√ß√£o) {\n" +
                "    // c√≥digo que ser√° repetido enquanto a condi√ß√£o for verdadeira\n" +
                "}");
        System.out.println("Se a condi√ß√£o for verdadeira ser√° executado o c√≥digo dentro do bloco {}, caso seja falso o c√≥digo termina");
        System.out.println("Segue um exemplo de while:");
        System.out.println("int contador = 1;\n" +
                "\n" +
                "while (contador <= 5) {\n" +
                "    System.out.println(\"Contando: \" + contador);\n" +
                "    contador++; // aumenta o valor de contador\n" +
                "}");
        System.out.println("A vari√°vel recebe o valor de 1, a condi√ß√£o √© que a var√≠avel deve ser menor ou igual 5. Ent√£o significa que enquanto a vari√°vel for menor ou igual 5 o c√≥digo dentro de {} ser√° executado");
        System.out.println("Cada vez que o a condi√ß√£o for verdadeira, o codigo executado faz com que a var√≠avel aumente 1 n√∫mero, ou seja, ela vai aumentando de 1 em 1 at√© ficar maior que 5 e parar o while");
        System.out.println("Chegou a hora de botar em pr√°tica tudo que aprendeu e come√ßar a derrotar o Bugador Mal√≠gno");

        // perguntas

        class Perguntas1 {

            public static void main(String[] args) {
                Scanner scanner = new Scanner(System.in);
                int acertos = 0;

                // Perguntas
                ArrayList<String> perguntas = new ArrayList<>(List.of(
                        "‚ø° Desafio 1 ‚Äì A Porta da Decis√£o:\nVoc√™ chega a uma porta com sensores. Um painel exibe o seguinte c√≥digo:\n\nint idade = 18;\nif (idade >= 18) {\n    System.out.println(\"Voc√™ pode votar.\");\n} else {\n    System.out.println(\"Voc√™ ainda n√£o pode votar.\");\n}\n\nO que a porta vai dizer?",
                        "‚ø¢ Desafio 2 ‚Äì O Caminho Par ou √çmpar:\nUm enigma bloqueia a ponte. O console mostra:\n\nint numero = 5;\nif (numero % 2 == 0) {\n    System.out.println(\"Par\");\n} else {\n    System.out.println(\"√çmpar\");\n}\n\nQual ser√° a sa√≠da?",
                        "‚ø£ Desafio 3 ‚Äì A Muralha dos Aprovados:\nVoc√™ tenta atravessar uma muralha m√°gica que s√≥ deixa passar os aprovados:\n\nint nota = 7;\nif (nota >= 6) {\n    System.out.println(\"Aprovado\");\n} else {\n    System.out.println(\"Reprovado\");\n}\n\nCom qual condi√ß√£o o jogador ser√° aprovado?",
                        "‚ø§ Desafio 4 ‚Äì O Erro no C√≥digo:\nVoc√™ encontra um c√≥digo quebrado no ch√£o digital:\n\nint x = 10;\nif x > 5 {\n    System.out.println(\"Maior que 5\");\n}\n\nQual √© o erro neste c√≥digo?",
                        "‚ø• Desafio 5 ‚Äì O Encontro dos Iguais:\nDois valores se encaram no meio da arena:\n\nint a = 3, b = 3;\nif (a == b) {\n    System.out.println(\"Iguais\");\n} else {\n    System.out.println(\"Diferentes\");\n}\n\nQual ser√° a sa√≠da?",
                        "‚ø¶ Desafio 6 ‚Äì O Caminho Correto:\nO caminho se divide em m√∫ltiplas decis√µes.\nQual alternativa representa corretamente o uso de else if?",
                        "‚øß Desafio 7 ‚Äì A Temperatura da Cidade:\nUm painel sens√≠vel √† temperatura l√™:\n\nint temp = 25;\nif (temp > 30) {\n    System.out.println(\"Muito quente\");\n} else if (temp >= 20) {\n    System.out.println(\"Agrad√°vel\");\n} else {\n    System.out.println(\"Frio\");\n}\n\nO que ser√° impresso?",
                        "‚ø® Desafio 8 ‚Äì A Armadilha L√≥gica:\nBugador Mal√≠gno tenta confundir sua mente.\nQual das afirma√ß√µes sobre if est√° incorreta?",
                        "‚ø© Desafio 9 ‚Äì A Nota Suprema:\nUm c√≥digo misterioso aparece:\n\nint nota = 10;\nif (nota == 10) {\n    System.out.println(\"Nota excelente\");\n} else {\n    System.out.println(\"Boa nota\");\n}\n\nPara qual valor de nota a sa√≠da ser√° \"Nota excelente\"?",
                        "üîü Desafio 10 ‚Äì A Verifica√ß√£o da Aposentadoria:\nVoc√™ encontra uma placa antiga com este c√≥digo:\n\nint idade = 65;\nif (idade >= 60) {\n    System.out.println(\"Voc√™ tem direito √† aposentadoria.\");\n} else {\n    System.out.println(\"Continue contribuindo.\");\n}\n\nQual √© o objetivo do c√≥digo?",
                        "‚ø°‚ø° Desafio 11 ‚Äì O S√≠mbolo Misterioso:\nUm s√≠mbolo m√°gico aparece no c√©u: == \n\nO que significa '==' dentro de uma estrutura if?",
                        "‚ø°‚ø¢ Desafio 12 ‚Äì O N√≠vel do Guerreiro:\nVoc√™ consulta seu n√≠vel de experi√™ncia no terminal:\n\nint nivel = 4;\nif (nivel > 5) {\n    System.out.println(\"Avan√ßado\");\n} else if (nivel >= 3) {\n    System.out.println(\"Intermedi√°rio\");\n} else {\n    System.out.println(\"Iniciante\");\n}\n\nQual ser√° a sa√≠da?")
                );

                // Alternativas
                ArrayList<String[]> alternativas = new ArrayList<>(List.of(
                        new String[]{"A) Voc√™ pode votar", "B) Voc√™ ainda n√£o pode votar", "C) Erro de compila√ß√£o", "D) Nenhuma das anteriores"},
                        new String[]{"A) Par", "B) √çmpar", "C) N√∫mero inv√°lido", "D) Nada"},
                        new String[]{"A) nota >= 5", "B) nota >= 6", "C) nota >= 7", "D) nota > 7"},
                        new String[]{"A) Falta de ponto e v√≠rgula", "B) Falta de par√™nteses na condi√ß√£o", "C) A vari√°vel x n√£o foi inicializada", "D) Nenhum erro"},
                        new String[]{"A) Iguais", "B) Diferentes", "C) Erro de compara√ß√£o", "D) Nenhuma sa√≠da"},
                        new String[]{"A) if (x > 10) { ... } else if (x == 10) { ... }", "B) if (x > 10) else if (x == 10)", "C) if (x > 10) else (x == 10)", "D) if x > 10 else x == 10"},
                        new String[]{"A) Muito quente", "B) Agrad√°vel", "C) Frio", "D) Nenhuma sa√≠da"},
                        new String[]{"A) O if pode ter apenas uma linha sem chaves", "B) O else √© obrigat√≥rio sempre que h√° um if", "C) Pode-se usar else if para m√∫ltiplas condi√ß√µes", "D) O if aceita express√µes booleanas"},
                        new String[]{"A) 8", "B) 9", "C) 10", "D) 11"},
                        new String[]{"A) Verifica se a pessoa √© idosa", "B) Verifica idade para desconto", "C) Verifica idade para aposentadoria", "D) Verifica se a idade √© v√°lida"},
                        new String[]{"A) Atribui√ß√£o de valor", "B) Compara√ß√£o de igualdade", "C) Soma de valores", "D) Verifica√ß√£o de tipo"},
                        new String[]{"A) Avan√ßado", "B) Intermedi√°rio", "C) Iniciante", "D) Nenhuma sa√≠da"}
                ));

                // Gabarito
                ArrayList<String> gabarito = new ArrayList<>(List.of(
                        "A", "B", "B", "B", "A", "A", "B", "B", "C", "C", "B", "B"
                ));

                // Gerar 3 √≠ndices aleat√≥rios √∫nicos
                ArrayList<Integer> indices = new ArrayList<>();
                for (int i = 0; i < perguntas.size(); i++) {
                    indices.add(i);
                }
                Collections.shuffle(indices);

                // Mostrar 3 perguntas aleat√≥rias
                for (int i = 0; i < 3; i++) {
                    int index = indices.get(i);
                    System.out.println("\n" + perguntas.get(index));
                    for (String opcao : alternativas.get(index)) {
                        System.out.println(opcao);
                    }
                    System.out.print("Sua resposta: ");
                    String resposta = scanner.nextLine();
                    if (resposta.equalsIgnoreCase(gabarito.get(index))) {
                        acertos++;
                    }
                    // Resultado final
                    System.out.println("\n‚úÖ Voc√™ acertou " + acertos + " de 3 perguntas!");
                    if (acertos == 3) {
                        System.out.println("üéâ Voc√™ √© um verdadeiro mestre dos ifs!");
                    } else if (acertos == 2) {
                        System.out.println("üí° Muito bem! Falta pouco para a perfei√ß√£o.");
                    } else {
                        System.out.println("‚ö† Continue estudando para derrotar o Bugador Mal√≠gno!");
                    }
                }

            }
        }
    }}











